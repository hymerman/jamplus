BuildSDL2_SaveSubDir = $(ALL_SUBDIR_TOKENS) ;

rule BuildSDL2 TOOLCHAINS {
    local saveActiveToolchain = [ C.GetActiveToolchain ] ;

    local toolchains ;
    local toolchain ;
    local saveSubDir = $(ALL_SUBDIR_TOKENS) ;

    for toolchain in $(TOOLCHAINS:E=$(saveActiveToolchain)) {
        toolchains += [ C.Toolchain $(toolchain) ] ;

        SubDir $(BuildSDL2_SaveSubDir) ;

        C.ActiveTarget sdl2 ;

        local SRCS =
                include/*.h
                src/*.c
                src/*.h
                src/atomic/*.c
                src/atomic/*.h
                src/audio/*.c
                src/audio/*.h
                src/cpuinfo/*.c
                src/cpuinfo/*.h
                src/dynapi/*.c
                src/dynapi/*.h
                src/events/*.c
                src/events/*.h
                src/file/*.c
                src/file/*.h
                src/libm/*.c
                src/libm/*.h
                src/render/*.c
                src/render/*.h
                src/render/*/*.c
                src/render/*/*.h
                src/stdlib/*.c
                src/stdlib/*.h
                src/thread/*.c
                src/thread/*.h
                src/timer/*.c
                src/timer/*.h
                src/video/*.c
                src/video/*.h
        ;

        if $(C.PLATFORM) in win32 win64 {
            SRCS +=
                    src/core/windows/*.c
                    src/core/windows/*.h
            ;

            SRCS +=
                    src/audio/winmm/*.c
                    src/audio/winmm/*.h
                    src/audio/directsound/*.c
                    src/audio/directsound/*.h
                    src/audio/xaudio2/*.c
                    src/audio/xaudio2/*.h
            ;

            SRCS +=
                    src/video/windows/*.c
                    src/video/windows/*.h
            ;

            SRCS +=
                    src/thread/windows/SDL_sysmutex.c
                    src/thread/windows/SDL_syssem.c
                    src/thread/windows/SDL_systhread.c
                    src/thread/windows/SDL_systls.c
                    src/thread/generic/SDL_syscond.c
            ;

            SRCS +=
                    src/power/*.c
                    src/power/windows/SDL_syspower.c
            ;

            SRCS +=
                    src/filesystem/windows/*.c
                    src/filesystem/windows/*.h
            ;

            SRCS +=
                    src/timer/windows/*.c
                    src/timer/windows/*.h
            ;

            SRCS +=
                    src/loadso/windows/*.c
                    src/loadso/windows/*.h
            ;

            SRCS +=
                    src/core/windows/*.c
                    src/core/windows/*.h
            ;

            SDL_JOYSTICK = 1 ;
            if $(SDL_JOYSTICK) = 1 {
                SRCS +=
                        src/joystick/windows/SDL_dinputjoystick.c
                        src/joystick/windows/SDL_dinputjoystick_c.h
                        src/joystick/windows/SDL_windowsjoystick.c
                        src/joystick/windows/SDL_xinputjoystick.c
                ;

                SRCS +=
                        src/haptic/windows/SDL_dinputhaptic.c
                        src/haptic/windows/SDL_dinputhaptic_c.h
                        src/haptic/windows/SDL_windowshaptic.c
                        src/haptic/windows/SDL_xinputhaptic.c
                ;

                SRCS +=
                        src/haptic/SDL_haptic.c
                        src/haptic/SDL_haptic_c.h
                        src/haptic/SDL_syshaptic.h
                ;
            }

            SRCS +=
                    src/video/dummy/*.c
                    src/video/dummy/*.h
            ;

            C.LinkPrebuiltLibraries : gdi32 imm32 ole32 oleaut32 opengl32 shell32 user32 uuid version winmm : public ;
            C.LinkPrebuiltLibraries : dinput8 dxguid : public ;
        }

        else if $(C.PLATFORM) in macosx32 macosx64 {
            SRCS +=
                    src/file/cocoa/*.m
                    src/file/cocoa/*.h
            ;

            SRCS +=
                    src/audio/coreaudio/*.c
                    src/audio/coreaudio/*.h
            ;

            SDL_JOYSTICK = 1 ;
            if $(SDL_JOYSTICK) = 1 {
                SRCS +=
                        src/joystick/darwin/*.c
                        src/joystick/darwin/*.m
                        src/joystick/darwin/*.h
                ;

                SRCS +=
                        src/haptic/darwin/SDL_syshaptic.c
                        src/haptic/darwin/SDL_syshaptic_c.h
                ;

                SRCS +=
                        #src/haptic/SDL_haptic.c
                        src/haptic/SDL_haptic_c.h
                        src/haptic/SDL_syshaptic.h
                ;
            }

            SRCS +=
                    src/power/*.c
                    src/power/*.h
                    src/power/macosx/SDL_syspower.c
            ;

            SRCS +=
                    src/timer/unix/*.c
                    src/timer/unix/*.h
            ;

            SRCS +=
                    src/filesystem/cocoa/*.m
                    src/filesystem/cocoa/*.h
            ;

            SRCS +=
                    src/video/cocoa/*.m
                    src/video/cocoa/*.h
            ;

            SRCS +=
                    src/loadso/dlopen/*.c
                    src/loadso/dlopen/*.h
            ;

            SRCS +=
                    src/thread/pthread/*.c
                    src/thread/pthread/*.h
            ;

            SRCS +=
                    src/video/dummy/*.c
                    src/video/dummy/*.h
            ;

            C.Defines : SDL_POWER_MACOSX ;
            #C.Flags : M MM : -fobjc-arc : public ;
            C.IncludeDirectories : src/render : public ;
            C.macosx.LinkFrameworks : AudioToolbox AudioUnit Carbon Cocoa CoreAudio CoreFoundation CoreGraphics CoreVideo ForceFeedback Foundation IOKit OpenGL : public ;
        }

        else if $(C.PLATFORM) in ios iossimulator {
            SRCS +=
                    src/file/cocoa/*.m
                    src/file/cocoa/*.h
            ;

            SRCS +=
                    src/audio/coreaudio/*.c
                    src/audio/coreaudio/*.h
            ;

            if $(SDL_JOYSTICK) = 1 {
                SRCS +=
                        src/joystick/iphoneos/*.m
                        src/joystick/iphoneos/*.h
                ;

                SRCS +=
                        src/haptic/dummy/*.c
                ;
            }

            SRCS +=
                    src/power/*.c
                    src/power/*.h
                    src/power/uikit/*.m
                    src/power/uikit/*.h
            ;

            SRCS +=
                    src/timer/unix/*.c
                    src/timer/unix/*.h
            ;

            SRCS +=
                    src/filesystem/cocoa/*.m
                    src/filesystem/cocoa/*.h
            ;

            SRCS +=
                    #src/render/opengles/*.c
                    #src/render/opengles/*.h
                    #src/render/opengles2/*.c
                    #src/render/opengles2/*.h
                    #src/render/software/*.c
                    #src/render/software/*.h
            ;

            SRCS +=
                    src/video/uikit/*.m
                    src/video/uikit/*.h
            ;

            SRCS +=
                    src/loadso/dlopen/*.c
                    src/loadso/dlopen/*.h
            ;

            SRCS +=
                    src/thread/pthread/*.c
                    src/thread/pthread/*.h
            ;

            SRCS +=
                    src/video/dummy/*.c
                    src/video/dummy/*.h
            ;

            C.Flags : M MM : -fobjc-arc : public ;
            C.ios.LinkFrameworks : AudioToolbox CoreAudio CoreGraphics Foundation OpenGLES QuartzCore UIKit : public ;
        }

        else if $(C.PLATFORM) in android {
            SRCS +=
                    src/audio/android/*.c
                    src/audio/android/*.h
            ;

            SDL_JOYSTICK = 1 ;
            if $(SDL_JOYSTICK) = 1 {
                SRCS +=
                        src/joystick/android/*.c
                        src/joystick/android/*.h
                ;

                SRCS +=
                        src/haptic/dummy/*.c
                ;
            }

            SRCS +=
                    src/power/*.c
                    src/power/*.h
                    src/power/android/*.c
                    src/power/android/*.h
            ;

            SRCS +=
                    src/timer/unix/*.c
                    src/timer/unix/*.h
            ;

            SRCS +=
                    src/filesystem/android/*.c
                    src/filesystem/android/*.h
            ;

            SRCS +=
                    #src/render/opengles/*.c
                    #src/render/opengles/*.h
                    #src/render/opengles2/*.c
                    #src/render/opengles2/*.h
                    #src/render/software/*.c
                    #src/render/software/*.h
            ;

            SRCS +=
                    src/video/android/*.c
                    src/video/android/*.h
            ;

            SRCS +=
                    src/loadso/dlopen/*.c
                    src/loadso/dlopen/*.h
            ;

            SRCS +=
                    src/thread/pthread/*.c
                    src/thread/pthread/*.h
            ;

            SRCS +=
                    src/core/android/*.c
                    src/core/android/*.h
            ;
        }

        else if $(C.PLATFORM) in android {
            SRCS +=
                    src/audio/android/*.c
                    src/audio/android/*.h
            ;

            if $(SDL_JOYSTICK) = 1 {
                SRCS +=
                        src/joystick/android/*.c
                        src/joystick/android/*.h
                ;

                SRCS +=
                        src/haptic/dummy/*.c
                ;
            }

            SRCS +=
                    src/power/*.c
                    src/power/*.h
                    src/power/android/*.c
                    src/power/android/*.h
            ;

            SRCS +=
                    src/timer/unix/*.c
                    src/timer/unix/*.h
            ;

            SRCS +=
                    src/filesystem/dummy/*.c
                    src/filesystem/dummy/*.h
            ;

            SRCS +=
                    #src/render/opengles/*.c
                    #src/render/opengles/*.h
                    #src/render/opengles2/*.c
                    #src/render/opengles2/*.h
                    #src/render/software/*.c
                    #src/render/software/*.h
            ;

            SRCS +=
                    src/video/android/*.c
                    src/video/android/*.h
            ;

            SRCS +=
                    src/loadso/dlopen/*.c
                    src/loadso/dlopen/*.h
            ;

            SRCS +=
                    src/thread/pthread/*.c
                    src/thread/pthread/*.h
            ;

            SRCS +=
                    src/core/android/*.c
                    src/core/android/*.h
            ;
        }

        if $(SDL_JOYSTICK) = 1 {
            SRCS +=
                    src/joystick/*.c
                    src/joystick/*.h
            ;

            SRCS +=
                    src/haptic/*.c
                    src/haptic/*.h
            ;
        }

        SRCS +=
                src/audio/disk/*.c
                src/audio/disk/*.h
                src/audio/dummy/*.c
                src/audio/dummy/*.h
        ;

        SRCS +=
                src/test/*.c
                src/test/*.h
        ;
        # */

        #C.Defines : USING_GENERATED_CONFIG_H ;
        C.Defines : HAVE_LIBC GL_GLEXT_PROTOTYPES ;

        if $(SDL_JOYSTICK) != 1 {
            C.Defines : SDL_JOYSTICK_DISABLED ;
            C.Defines : SDL_HAPTIC_DISABLED ;
        }

        C.IncludeDirectories : include : public ;

        AutoSourceGroup : $(SRCS) ;

        if $(C.PLATFORM) in android {
            C.Defines : ANDROID ;
            C.OutputName : libSDL2 ;
            C.OutputPostfix ;
            C.LinkPrebuiltLibraries : gcc dl GLESv1_CM GLESv2 log android c m ;
            C.Library : $(SRCS) : shared ;

        } else {
            C.Library : $(SRCS) ;
        }

        #########################
        C.ActiveTarget sdl2main ;

        SRCS = ;

        if $(C.PLATFORM) in win32 win64 {
            SRCS =
                    src/main/windows/SDL_windows_main.c
            ;
            #C.LinkPrebuiltLibraries : shell32 winmm : public ;

        } else if $(C.PLATFORM) in android {
            SRCS =
                src/main/android/*.c        # */
            ;
            C.Defines : ANDROID ;
            #C.OutputName : libmain ;
            #C.OutputPostfix ;
            C.LinkPrebuiltLibraries : GLESv1_CM GLESv2 log c m : public ;
            C.LinkFlags : -Wl,--undefined=Java_org_libsdl_app_SDLActivity_nativeInit : public ;

        }

        C.IncludeDirectories : include : public ;
        C.Library : $(SRCS) ;
    }

    C.Toolchain $(saveActiveToolchain) ;
    SubDir $(saveSubDir) ;

    return $(toolchains) ;
}

